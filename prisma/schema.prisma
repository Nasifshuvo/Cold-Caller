generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  roleId    Int
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client?
  role      Role     @relation(fields: [roleId], references: [id])

  @@index([email])
  @@index([roleId])
}

model Client {
  id                Int           @id @default(autoincrement())
  name              String?
  email             String        @unique
  phone             String
  userId            Int           @unique
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  active            Boolean       @default(true)
  balance           Decimal       @default(0.00) @db.Decimal(10, 2)
  vapiKey           String?       @unique
  vapiAssistantId   String?
  vapiPhoneNumberId String?
  calls             Call[]
  user              User          @relation(fields: [userId], references: [id])
  leads             Lead[]
  leadImports       LeadImport[]
  transactions      Transaction[]

  @@index([userId])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Decimal  @db.Decimal(10, 2)
  type      String
  clientId  Int
  createdAt DateTime @default(now())
  reason    String   @default("Legacy Transaction")
  reference String?
  processed Boolean  @default(false)
  client    Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
  @@index([processed])
  @@index([type])
}

model Log {
  id          Int      @id @default(autoincrement())
  event       String   @db.VarChar(255)
  description Json
  createdAt   DateTime @default(now())
  vapiCallId  String?  @db.VarChar(255)

  @@index([event])
  @@index([vapiCallId])
}

model LeadImport {
  id         Int      @id @default(autoincrement())
  clientId   Int
  fileName   String
  totalLeads Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  leads      Lead[]
  client     Client   @relation(fields: [clientId], references: [id])

  @@index([clientId])
}

model Lead {
  id          Int         @id @default(autoincrement())
  clientId    Int
  importId    Int?
  phoneNumber String
  name        String?
  callStatus  String      @default("Not Initiated")
  response    String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  calls       Call[]
  client      Client      @relation(fields: [clientId], references: [id])
  leadImport  LeadImport? @relation(fields: [importId], references: [id])

  @@unique([clientId, phoneNumber], name: "clientId_phoneNumber")
  @@index([clientId])
  @@index([phoneNumber])
  @@index([importId])
}

model Call {
  id            Int      @id @default(autoincrement())
  leadId        Int?
  clientId      Int
  callStatus    String   @default("Not Initiated")
  response      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  analysis      Json?
  assistantId   String?
  cost          Decimal? @db.Decimal(10, 4)
  costBreakdown Json?
  customerNumber String?
  endedAt       DateTime? @db.DateTime(3)
  endedReason   String?
  final_cost    Decimal? @db.Decimal(10, 4)
  messages      Json?
  recordingUrl  String?  @db.Text
  startedAt     DateTime? @db.DateTime(3)
  stereoRecordingUrl String? @db.Text
  summary       String?  @db.Text
  transcript    String?  @db.Text
  type          String?
  vapiCallId    String?  @unique @db.VarChar(255)
  webCallUrl    String?  @db.Text
  costDeducted  Boolean  @default(false)
  client        Client   @relation(fields: [clientId], references: [id])
  lead          Lead?    @relation(fields: [leadId], references: [id])

  @@index([leadId])
  @@index([clientId])
  @@index([vapiCallId])
}

model Appointment {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  date        DateTime
  time        String
  status      String   @default("SCHEDULED")
  callId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  metadata    Json?

  @@index([email])
  @@index([date])
  @@index([status])
}

model Setting {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       Json     @db.Json
  category    String   @db.VarChar(50)
  label       String   @db.VarChar(255)
  description String?  @db.Text
  isSystem    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([key])
  @@index([category])
}
