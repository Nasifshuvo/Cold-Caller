generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client?

  @@index([email])
  @@index([roleId])
}

model Client {
  id                Int           @id @default(autoincrement())
  name              String?
  email             String        @unique
  phone             String
  userId            Int           @unique
  user              User          @relation(fields: [userId], references: [id])
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  active            Boolean       @default(true)
  balance           Decimal       @default(0) @db.Decimal(10, 2)
  vapiKey           String?       @unique
  vapiAssistantId   String?
  vapiPhoneNumberId String?
  leads             Lead[]
  calls             Call[]
  leadImports       LeadImport[]
  transactions      Transaction[]

  @@index([userId])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Decimal  @db.Decimal(10, 2)
  type      String   // 'CREDIT' or 'DEBIT'
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())

  @@index([clientId])
}

model Log {
  id          Int      @id @default(autoincrement())
  event       String   @db.VarChar(255)
  description Json     @db.Json
  createdAt   DateTime @default(now())

  @@index([event])
}

model LeadImport {
  id          Int       @id @default(autoincrement())
  clientId    Int
  client      Client    @relation(fields: [clientId], references: [id])
  fileName    String
  totalLeads  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  leads       Lead[]

  @@index([clientId])
}

model Lead {
  id            Int         @id @default(autoincrement())
  clientId      Int
  client        Client      @relation(fields: [clientId], references: [id])
  importId      Int?
  leadImport    LeadImport? @relation(fields: [importId], references: [id])
  phoneNumber   String
  name        String?
  callStatus    String      @default("Not Initiated")
  response      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  calls         Call[]

  @@index([clientId])
  @@index([phoneNumber])
  @@index([importId])
  @@unique([clientId, phoneNumber], name: "clientId_phoneNumber")
}

model Call {
  id          Int       @id @default(autoincrement())
  leadId      Int
  lead        Lead      @relation(fields: [leadId], references: [id])
  clientId    Int
  client      Client    @relation(fields: [clientId], references: [id])
  callStatus  String    @default("Not Initiated")
  response    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([leadId])
  @@index([clientId])
} 