generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  roleId    Int
  role      Role     @relation(fields: [roleId], references: [id])
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  client    Client?

  @@index([email])
  @@index([roleId])
}

model Client {
  id                Int           @id @default(autoincrement())
  name              String?
  email             String        @unique
  phone             String
  userId            Int           @unique
  user              User          @relation(fields: [userId], references: [id])
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  active            Boolean       @default(true)
  balance           Decimal       @default(0) @db.Decimal(10, 2)
  vapiKey           String?       @unique
  vapiAssistantId   String?
  vapiPhoneNumberId String?
  leads             Lead[]
  calls             Call[]
  leadImports       LeadImport[]
  transactions      Transaction[]

  @@index([userId])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Decimal  @db.Decimal(10, 2)
  type      String   // 'CREDIT' or 'DEBIT'
  clientId  Int
  client    Client   @relation(fields: [clientId], references: [id])
  createdAt DateTime @default(now())

  @@index([clientId])
}

model Log {
  id          Int      @id @default(autoincrement())
  event       String   @db.VarChar(255)
  description Json     @db.Json
  vapiCallId  String?  @db.VarChar(255)
  createdAt   DateTime @default(now())

  @@index([event])
  @@index([vapiCallId])
}

model LeadImport {
  id          Int       @id @default(autoincrement())
  clientId    Int
  client      Client    @relation(fields: [clientId], references: [id])
  fileName    String
  totalLeads  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  leads       Lead[]

  @@index([clientId])
}

model Lead {
  id            Int         @id @default(autoincrement())
  clientId      Int
  client        Client      @relation(fields: [clientId], references: [id])
  importId      Int?
  leadImport    LeadImport? @relation(fields: [importId], references: [id])
  phoneNumber   String
  name        String?
  callStatus    String      @default("Not Initiated")
  response      String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  calls         Call[]

  @@index([clientId])
  @@index([phoneNumber])
  @@index([importId])
  @@unique([clientId, phoneNumber], name: "clientId_phoneNumber")
}

model Call {
  id                Int       @id @default(autoincrement())
  leadId            Int?
  lead              Lead?     @relation(fields: [leadId], references: [id])
  clientId          Int
  client            Client    @relation(fields: [clientId], references: [id])
  callStatus        String    @default("Not Initiated")
  response          String?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  // Vapi fields
  vapiCallId        String?   @unique
  assistantId       String?
  type              String?
  startedAt         DateTime?
  endedAt           DateTime?
  transcript        String?   @db.Text
  recordingUrl      String?   @db.Text
  stereoRecordingUrl String?  @db.Text
  summary           String?   @db.Text
  cost              Decimal?  @db.Decimal(10, 4)
  final_cost        Decimal?  @db.Decimal(10, 4)
  customerNumber    String?
  endedReason       String?
  webCallUrl        String?   @db.Text
  
  costBreakdown     Json?     @db.Json
  analysis          Json?     @db.Json
  messages          Json?     @db.Json

  @@index([leadId])
  @@index([clientId])
  @@index([vapiCallId])
}

model Appointment {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  date        String
  time        String
  status      String   @default("SCHEDULED")
  vapiCallId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  metadata    Json?    @db.Json

  @@index([email])
  @@index([date])
  @@index([status])
}

model Setting {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       Json     @db.Json
  category    String   @db.VarChar(50)
  label       String   @db.VarChar(255)
  description String?  @db.Text
  isSystem    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([key])
  @@index([category])
} 